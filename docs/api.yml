
openapi: 3.0.0
info:
  title: Wallet API
  version: 1.0.0
  description: API Specification for a wallet application

tags:
  - name: Account
  - name: Transactions
paths:
  /accounts:
    get:
      summary: Get the list of accounts
      tags:
        - Account
      responses:
        200:
          description: Successfully retrieved the list of accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListBody'

        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
    put:
      summary: Update an existing account
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the account
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAccount'
      responses:
        200:
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateListBody'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /transactions:
    get:
      tags:
        - Transactions
      summary: Get all transactions
      description: The returned transactions 
      operationId: getTransactions
      parameters:
        - in: query
          name: transactionsName
          description: Filter return transactions by given name
          required: false
          schema:
            type: string
        - in: query
          name: transactionDate
          description: Transaction date
          required: true
          schema:
            type: string
            format: date
      responses:
        200:
          description: successfully returns list of all transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionBody'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
    put:
      tags:
        - Transactions    
      summary: Update a list of transactions
      operationId: UpdateTransactions
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Transaction'
      responses:
        200:
          description: Transaction updated successfully 
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        500:
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
components:
  schemas:
    AccountList:
      type: array
      items:
        type: object
        properties:
          accountId:
            type: integer
            description: The unique identifier for the account.
          name:
            type: string
            description: The name of the account.
          devise:
            type: string
            description: The currency associated with the account.
            enum: ['Ariary', 'Euro', 'Dollar', 'Other']
    Transaction:
      type: object
      properties:
        transactionId:
          type: integer
        transactionName:
          type: string
          description: transaction name
        transactionDate:
          type: string
          format: date
          description: transaction date
    CreateOrUpdateAccount:
      type: object
      properties:
        name:
          type: string
          description: Name of the account
        devise:
          type: string
          description: Currency of the account
          enum: [ 'Ariary', 'Euro', 'Dollar', 'Other' ]
      required:
        - name
        - devise
    Status:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    ResponseTemplate:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        body:
          type: object
    Successfully:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
      example:
        status:
          code: 200
        message: ok
        body: { }
    TransactionBody:
      allOf:
        - $ref: '#/components/schemas/Transaction'

    AccountListBody:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
        - properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/AccountList'
    CreateOrUpdateListBody:

      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
        - properties:
            body:
              type: array
              items:

        

                $ref: '#/components/schemas/CreateOrUpdateAccount'

    BadRequestException:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
      example:
        status:
          code: 400
        message: bad request
        body: ''
    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
      example:
        status:
          code: 403
        message: Not authorized
        body:
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/ResponseTemplate'
      example:
        status:
          code: 500
        message: InternalServerException
        body:
  parameters:
    QueryPagination:
      name: queryPagination
      in: query
      description: Paramètres de pagination.
      required: false
      schema:
        type: object
        properties:
          page:
            type: integer
            default: 1
            description: Le numéro de page.
          page_size:
            type: integer
            default: 50
            description: Le nombre d'éléments par page
    PathPagination:
      name: queryPagination
      in: path
      description: pagination parametters.
      required: true
      schema:
        type: object
        properties:
          page:
            type: integer
            default: 1
            description: page number.
          page_size:
            type: integer
            default: 50
            description: Page size

